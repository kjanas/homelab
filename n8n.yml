services:
  n8n:
    image: docker.n8n.io/n8nio/n8n:stable
    container_name: n8n
    restart: always
    user: root
    environment:
      - N8N_ENFORCE_SETTINGS_FILE_PERMISSIONS=true
      - N8N_GIT_NODE_DISABLE_BARE_REPOS=true
      - DB_SQLITE_POOL_SIZE=10
      - N8N_BLOCK_ENV_ACCESS_IN_NODE=true
      - N8N_HOST=n8n.${DOMAIN}
      - N8N_PORT=${N8N_SERVICE_PORT}
      - N8N_PROTOCOL=https
      - N8N_RUNNERS_ENABLED=true
      - N8N_PROXY_HOPS=1
      - NODE_ENV=production
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
      - WEBHOOK_URL=https://n8n.${DOMAIN}/
      - GENERIC_TIMEZONE=${TZ}
      - TZ=${TZ}
    volumes:
      - ${STACK_PATH}/n8n/node:/home/node
      - ${STACK_PATH}/n8n/files:/files
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - network_core
    labels:
      - traefik.enable=true
      - traefik.http.routers.n8n.rule=Host(`n8n.${DOMAIN}`)
      - traefik.http.routers.n8n.entrypoints=websecure
      - traefik.http.routers.n8n.tls=true
      - traefik.http.routers.n8n.tls.certresolver=${CERT_RESOLVER}
      # - traefik.http.routers.n8n.middlewares=n8n@docker
      - traefik.http.routers.n8n.service=n8n
      # - traefik.http.middlewares.n8n.headers.SSLRedirect=true
      # - traefik.http.middlewares.n8n.headers.STSSeconds=315360000
      # - traefik.http.middlewares.n8n.headers.browserXSSFilter=true
      # - traefik.http.middlewares.n8n.headers.contentTypeNosniff=true
      # - traefik.http.middlewares.n8n.headers.forceSTSHeader=true
      # - traefik.http.middlewares.n8n.headers.SSLHost=${DOMAIN}
      # - traefik.http.middlewares.n8n.headers.STSIncludeSubdomains=true
      # - traefik.http.middlewares.n8n.headers.STSPreload=true
      - traefik.http.services.n8n.loadbalancer.server.port=${N8N_SERVICE_PORT}